{"ast":null,"code":"import { ProductStore } from \"./ProductStore\";\nexport const fetchData = async () => {\n  const json = [\"yamaha.json\"];\n  var products = [];\n  json.forEach(async category => {\n    const products = await fetchProducts(category);\n    let categoryName = category.replace(\".json\", \"\");\n    categoryName = categoryName.replace(\"_\", \" \");\n    categoryName = uppercaseWords(categoryName);\n    const productCategory = {\n      name: categoryName,\n      slug: category.replace(\".json\", \"\"),\n      cover: products[6].image,\n      products\n    };\n    ProductStore.update(s => {\n      s.products = [...s.products, productCategory];\n    });\n  });\n  return products;\n};\n\nconst fetchProducts = async category => {\n  const response = await fetch(`products/${category}`);\n  const data = await response.json(); //  Set a product id\n\n  await data.forEach((d, i) => {\n    d.id = i + 1;\n  });\n  return data;\n};\n\nconst uppercaseWords = words => {\n  words = words.toLowerCase().split(' ').map(s => s.charAt(0).toUpperCase() + s.substring(1)).join(' ');\n  return words;\n};","map":{"version":3,"sources":["D:/mobilecross/Ajege/src/data/fetcher.js"],"names":["ProductStore","fetchData","json","products","forEach","category","fetchProducts","categoryName","replace","uppercaseWords","productCategory","name","slug","cover","image","update","s","response","fetch","data","d","i","id","words","toLowerCase","split","map","charAt","toUpperCase","substring","join"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,YAAY;AAEjC,QAAMC,IAAI,GAAG,CAAC,aAAD,CAAb;AAEA,MAAIC,QAAQ,GAAG,EAAf;AAEAD,EAAAA,IAAI,CAACE,OAAL,CAAc,MAAMC,QAAN,IAAkB;AAE5B,UAAMF,QAAQ,GAAG,MAAMG,aAAa,CAACD,QAAD,CAApC;AAEA,QAAIE,YAAY,GAAGF,QAAQ,CAACG,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAAnB;AACAD,IAAAA,YAAY,GAAGA,YAAY,CAACC,OAAb,CAAqB,GAArB,EAA0B,GAA1B,CAAf;AACAD,IAAAA,YAAY,GAAGE,cAAc,CAACF,YAAD,CAA7B;AAEA,UAAMG,eAAe,GAAG;AAEpBC,MAAAA,IAAI,EAAEJ,YAFc;AAGpBK,MAAAA,IAAI,EAAEP,QAAQ,CAACG,OAAT,CAAiB,OAAjB,EAA0B,EAA1B,CAHc;AAIpBK,MAAAA,KAAK,EAAEV,QAAQ,CAAC,CAAD,CAAR,CAAYW,KAJC;AAKpBX,MAAAA;AALoB,KAAxB;AAQAH,IAAAA,YAAY,CAACe,MAAb,CAAoBC,CAAC,IAAI;AAAEA,MAAAA,CAAC,CAACb,QAAF,GAAa,CAAE,GAAGa,CAAC,CAACb,QAAP,EAAiBO,eAAjB,CAAb;AAAkD,KAA7E;AACH,GAjBD;AAmBA,SAAOP,QAAP;AACH,CA1BM;;AA4BP,MAAMG,aAAa,GAAG,MAAMD,QAAN,IAAkB;AAEpC,QAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAE,YAAYb,QAAU,EAAxB,CAA5B;AACA,QAAMc,IAAI,GAAG,MAAMF,QAAQ,CAACf,IAAT,EAAnB,CAHoC,CAKpC;;AACA,QAAMiB,IAAI,CAACf,OAAL,CAAa,CAACgB,CAAD,EAAIC,CAAJ,KAAU;AAEzBD,IAAAA,CAAC,CAACE,EAAF,GAAOD,CAAC,GAAG,CAAX;AACH,GAHK,CAAN;AAKA,SAAOF,IAAP;AACH,CAZD;;AAcA,MAAMV,cAAc,GAAGc,KAAK,IAAI;AAE5BA,EAAAA,KAAK,GAAGA,KAAK,CAACC,WAAN,GACPC,KADO,CACD,GADC,EAEPC,GAFO,CAEFV,CAAD,IAAOA,CAAC,CAACW,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BZ,CAAC,CAACa,SAAF,CAAY,CAAZ,CAFhC,EAGPC,IAHO,CAGF,GAHE,CAAR;AAKA,SAAOP,KAAP;AACH,CARD","sourcesContent":["import { ProductStore } from \"./ProductStore\";\r\n\r\nexport const fetchData = async () => {\r\n\r\n    const json = [\"yamaha.json\"];\r\n\r\n    var products = [];\r\n\r\n    json.forEach( async category => {\r\n\r\n        const products = await fetchProducts(category);\r\n\r\n        let categoryName = category.replace(\".json\", \"\");\r\n        categoryName = categoryName.replace(\"_\", \" \");\r\n        categoryName = uppercaseWords(categoryName);\r\n\r\n        const productCategory = {\r\n\r\n            name: categoryName,\r\n            slug: category.replace(\".json\", \"\"),\r\n            cover: products[6].image,\r\n            products\r\n        };\r\n\r\n        ProductStore.update(s => { s.products = [ ...s.products, productCategory ]; });\r\n    });\r\n\r\n    return products;\r\n}\r\n\r\nconst fetchProducts = async category => {\r\n\r\n    const response = await fetch(`products/${ category }`);\r\n    const data = await response.json();\r\n\r\n    //  Set a product id\r\n    await data.forEach((d, i) => {\r\n\r\n        d.id = i + 1;\r\n    });\r\n\r\n    return data;\r\n}\r\n\r\nconst uppercaseWords = words => {\r\n\r\n    words = words.toLowerCase()\r\n    .split(' ')\r\n    .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\r\n    .join(' ');\r\n\r\n    return words;\r\n}"]},"metadata":{},"sourceType":"module"}