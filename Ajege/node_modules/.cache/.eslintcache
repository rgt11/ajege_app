[{"D:\\mobilecross\\Ajege\\src\\index.js":"1","D:\\mobilecross\\Ajege\\src\\App.js":"2","D:\\mobilecross\\Ajege\\src\\data\\ProductStore.js":"3","D:\\mobilecross\\Ajege\\src\\pages\\Home.js":"4","D:\\mobilecross\\Ajege\\src\\pages\\Product.js":"5","D:\\mobilecross\\Ajege\\src\\pages\\FavouriteProducts.js":"6","D:\\mobilecross\\Ajege\\src\\data\\CartStore.js":"7","D:\\mobilecross\\Ajege\\src\\data\\fetcher.js":"8","D:\\mobilecross\\Ajege\\src\\data\\FavouritesStore.js":"9","D:\\mobilecross\\Ajege\\src\\pages\\CartProducts.js":"10","D:\\mobilecross\\Ajege\\src\\pages\\CategoryProducts.js":"11","D:\\mobilecross\\Ajege\\src\\components\\ProductCard.js":"12"},{"size":207,"mtime":1637906135863,"results":"13","hashOfConfig":"14"},{"size":3266,"mtime":1637977628238,"results":"15","hashOfConfig":"14"},{"size":106,"mtime":1637906135861,"results":"16","hashOfConfig":"14"},{"size":1730,"mtime":1637943907876,"results":"17","hashOfConfig":"14"},{"size":7291,"mtime":1637974207494,"results":"18","hashOfConfig":"14"},{"size":3548,"mtime":1637953050122,"results":"19","hashOfConfig":"14"},{"size":429,"mtime":1637906135859,"results":"20","hashOfConfig":"14"},{"size":1205,"mtime":1637973960790,"results":"21","hashOfConfig":"14"},{"size":569,"mtime":1637906135859,"results":"22","hashOfConfig":"14"},{"size":5132,"mtime":1637973335758,"results":"23","hashOfConfig":"14"},{"size":3844,"mtime":1637974463215,"results":"24","hashOfConfig":"14"},{"size":4056,"mtime":1637974167820,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vx2dff",{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},"D:\\mobilecross\\Ajege\\src\\index.js",[],"D:\\mobilecross\\Ajege\\src\\App.js",["57","58","59","60","61"],"import { Redirect, Route } from 'react-router-dom';\r\nimport { IonApp, IonRouterOutlet, IonTabs, IonTabBar, IonTabButton, IonIcon, IonLabel, IonBadge } from '@ionic/react';\r\nimport { IonReactRouter } from '@ionic/react-router';\r\nimport { calendar, personCircle, map, informationCircle, person, cart, heart, list} from 'ionicons/icons';\r\nimport Home from './pages/Home';\r\nimport { ProductStore } from './data/ProductStore';\r\nimport { FavouritesStore } from './data/FavouritesStore';\r\nimport { CartStore } from './data/CartStore';\r\n/* Core CSS required for Ionic components to work properly */\r\nimport '@ionic/react/css/core.css';\r\n\r\n/* Basic CSS for apps built with Ionic */\r\nimport '@ionic/react/css/normalize.css';\r\nimport '@ionic/react/css/structure.css';\r\nimport '@ionic/react/css/typography.css';\r\n\r\n/* Optional CSS utils that can be commented out */\r\nimport '@ionic/react/css/padding.css';\r\nimport '@ionic/react/css/float-elements.css';\r\nimport '@ionic/react/css/text-alignment.css';\r\nimport '@ionic/react/css/text-transformation.css';\r\nimport '@ionic/react/css/flex-utils.css';\r\nimport '@ionic/react/css/display.css';\r\n\r\n/* Theme variables */\r\nimport './theme/variables.css';\r\nimport { useEffect } from 'react';\r\nimport { fetchData } from './data/fetcher';\r\nimport CategoryProducts from './pages/CategoryProducts';\r\nimport Product from './pages/Product';\r\nimport FavouriteProducts from './pages/FavouriteProducts';\r\nimport CartProducts from './pages/CartProducts';\r\n\r\nconst App = () => {\r\n\tconst products = ProductStore.useState(s => s.products);\r\n  \tconst favourites = FavouritesStore.useState(s => s.product_ids);\r\n\tconst shopCart = CartStore.useState(s => s.product_ids);\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<IonApp>\r\n\t\t\t<IonReactRouter>\r\n\t\t\t<IonTabs>\r\n\t\t\t\t<IonRouterOutlet>\r\n\t\t\t\t\t<Route path=\"/\" exact={true}>\r\n\t\t\t\t\t\t<Redirect to=\"/home\" />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/home\" exact={true}>\r\n\t\t\t\t\t\t<Home />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/favourites\" exact>\r\n\t\t\t\t\t\t<FavouriteProducts />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/cart\" exact>\r\n\t\t\t\t\t\t<CartProducts />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/category/:slug\" exact>\r\n\t\t\t\t\t\t<CategoryProducts />\r\n\t\t\t\t\t</Route>\r\n\r\n\t\t\t\t\t<Route path=\"/category/:slug/:id\" exact>\r\n\t\t\t\t\t\t<Product />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</IonRouterOutlet>\r\n\t\t\t\r\n\t\t\t\t\t<IonTabBar slot=\"bottom\">\r\n\t\t\t\t\t\t<IonTabButton href=\"/home\" tab=\"schedule\">\r\n\t\t\t\t\t\t\t<IonIcon icon={list} />\r\n\t\t\t\t\t\t\t<IonLabel>Categories</IonLabel>\r\n\t\t\t\t\t\t</IonTabButton>\r\n\r\n\t\t\t\t\t\t<IonTabButton href=\"/favourites\" tab=\"speakers\">\r\n\t\t\t\t\t\t\t<IonIcon icon={heart} />\r\n\t\t\t\t\t\t\t<IonLabel>Favourites</IonLabel>\r\n\t\t\t\t\t\t\t<IonBadge color=\"danger\">\r\n                            { favourites.length }\r\n                        </IonBadge>\r\n\t\t\t\t\t\t</IonTabButton>\r\n\r\n\t\t\t\t\t\t<IonTabButton href=\"/cart\" tab=\"map\">\r\n\t\t\t\t\t\t\t<IonIcon icon={cart} />\r\n\t\t\t\t\t\t\t<IonLabel>Cart</IonLabel>\r\n\t\t\t\t\t\t\t<IonBadge color=\"danger\">\r\n                            { shopCart.length }\r\n                        </IonBadge>\r\n\t\t\t\t\t\t</IonTabButton>\r\n\r\n\t\t\t\t\t\t<IonTabButton tab=\"about\">\r\n\t\t\t\t\t\t\t<IonIcon icon={person} />\r\n\t\t\t\t\t\t\t<IonLabel>Profile</IonLabel>\r\n\t\t\t\t\t\t</IonTabButton>\r\n\t\t\t\t\t</IonTabBar>\r\n\t\t\t\t</IonTabs>\r\n\t\t\t</IonReactRouter>\r\n\t\t</IonApp>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","D:\\mobilecross\\Ajege\\src\\data\\ProductStore.js",[],"D:\\mobilecross\\Ajege\\src\\pages\\Home.js",["62","63","64","65","66","67","68","69","70"],"import { useState } from 'react';\r\nimport { IonBadge, IonButton, IonButtons, IonCard, IonCardContent, IonCardSubtitle, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonPage, IonRow, IonTitle, IonToolbar } from '@ionic/react';\r\n\r\nimport styles from \"./Home.module.css\";\r\nimport { cart, heart } from 'ionicons/icons';\r\n\r\nimport { ProductStore } from '../data/ProductStore';\r\nimport { FavouritesStore } from '../data/FavouritesStore';\r\nimport { CartStore } from '../data/CartStore';\r\n\r\nconst Home = () => {\r\n\r\n  \tconst products = ProductStore.useState(s => s.products);\r\n  \tconst favourites = FavouritesStore.useState(s => s.product_ids);\r\n\tconst shopCart = CartStore.useState(s => s.product_ids);\r\n\r\n\treturn (\r\n\t\t<IonPage id=\"home-page\" className={ styles.homePage }>\r\n\t\t\t<IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonTitle>Categories</IonTitle>\r\n\t\t\t\t\t\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\t\t\t\r\n\t\t\t<IonContent fullscreen>\r\n\t\t\t\t<IonHeader collapse=\"condense\">\r\n\t\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonTitle size=\"large\">\r\n\t\t\t\t\t\tCategories\r\n\t\t\t\t\t</IonTitle>\r\n\t\t\t\t\t</IonToolbar>\r\n\t\t\t\t</IonHeader>\r\n\r\n\t\t\t\t<IonGrid>\r\n\t\t\t\t\t<IonRow>\r\n\t\t\t\t\t\t{ products.map((category, index) => {\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<IonCol size=\"6\" key={ `category_list_${ index }`}>\r\n\t\t\t\t\t\t\t\t\t<IonCard routerLink={ `/category/${ category.slug }`} className={ styles.categoryCard }>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<img src={ category.cover } alt=\"category cover\" />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<IonCardContent className={ styles.categoryCardContent }>\r\n\t\t\t\t\t\t\t\t\t\t\t<IonCardSubtitle>{ category.name }</IonCardSubtitle>\r\n\t\t\t\t\t\t\t\t\t\t</IonCardContent>\r\n\t\t\t\t\t\t\t\t\t</IonCard>\r\n\t\t\t\t\t\t\t\t</IonCol>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</IonRow>\r\n\t\t\t\t</IonGrid>\r\n\t\t\t</IonContent>\r\n\t\t</IonPage>\r\n\t);\r\n};\r\n\r\nexport default Home;","D:\\mobilecross\\Ajege\\src\\pages\\Product.js",["71","72","73","74"],"import { IonBadge, IonButton, IonButtons, IonCard, IonCardContent, IonCardHeader, IonCardSubtitle, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\r\nimport { arrowRedoOutline, cart, cartOutline, chevronBackOutline, heart, heartOutline } from \"ionicons/icons\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router\"\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport { addToCart, CartStore } from \"../data/CartStore\";\r\nimport { addToFavourites, FavouritesStore } from \"../data/FavouritesStore\";\r\nimport { ProductStore } from \"../data/ProductStore\";\r\n\r\nimport styles from \"./Product.module.css\";\r\n\r\nconst Product = () => {\r\n\r\n    const params = useParams();\r\n    const cartRef = useRef();\r\n    const products = ProductStore.useState(s => s.products);\r\n    const favourites = FavouritesStore.useState(s => s.product_ids);\r\n    const [ isFavourite, setIsFavourite ] = useState(false);\r\n    const shopCart = CartStore.useState(s => s.product_ids);\r\n    const [ product, setProduct ] = useState({});\r\n    const [ category, setCategory ] = useState({});\r\n\r\n    useEffect(() => {\r\n\r\n        const categorySlug = params.slug;\r\n        const productID = params.id;\r\n        const tempCategory = products.filter(p => p.slug === categorySlug)[0];\r\n        const tempProduct = tempCategory.products.filter(p => parseInt(p.id) === parseInt(productID))[0];\r\n\r\n        const tempIsFavourite = favourites.find(f => f === `${ categorySlug }/${ productID }`);\r\n\r\n        setIsFavourite(tempIsFavourite);\r\n        setCategory(tempCategory);\r\n        setProduct(tempProduct);\r\n    }, [ params.slug, params.id ]);\r\n\r\n    useEffect(() => {\r\n\r\n        const tempIsFavourite = favourites.find(f => f === `${ category.slug }/${ product.id }`);\r\n        setIsFavourite(tempIsFavourite ? true : false);\r\n    }, [favourites, product]);\r\n\r\n    const addProductToFavourites = (e, categorySlug, productID) => {\r\n\r\n        e.preventDefault();\r\n        addToFavourites(categorySlug, productID);\r\n\r\n\r\n        document.getElementById(`placeholder_favourite_product_${ categorySlug }_${ productID }`).style.display = \"\";\r\n        document.getElementById(`placeholder_favourite_product_${ categorySlug }_${ productID }`).classList.add(\"animate__fadeOutTopRight\");\r\n    }\r\n\r\n    const addProductToCart = (e, categorySlug, productID) => {\r\n\r\n        e.preventDefault();\r\n\r\n        document.getElementById(`placeholder_cart_${ categorySlug }_${ productID }`).style.display = \"\";\r\n        document.getElementById(`placeholder_cart_${ categorySlug }_${ productID }`).classList.add(\"animate__fadeOutUp\");\r\n\r\n        setTimeout(() => {\r\n\r\n            cartRef.current.classList.add(\"animate__tada\");\r\n            addToCart(categorySlug, productID);\r\n\r\n            setTimeout(() => {\r\n                cartRef.current.classList.remove(\"animate__tada\");\r\n            }, 500);\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n\r\n        <IonPage id=\"category-page\" className={ styles.categoryPage }>\r\n            <IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonButton color=\"dark\" text={ category.name } routerLink={ `/category/${ category.slug }` } routerDirection=\"back\">\r\n                            <IonIcon color=\"dark\" icon={ chevronBackOutline } />&nbsp;{ category.name }\r\n                        </IonButton>\r\n                    </IonButtons>\r\n\r\n                    <IonTitle>View Product</IonTitle>\r\n\r\n                    <IonButtons slot=\"end\">\r\n                        <IonBadge color=\"dark\">\r\n                            { shopCart.length }\r\n                        </IonBadge>\r\n\t\t\t\t\t\t<IonButton color=\"dark\" routerLink=\"/cart\">\r\n\t\t\t\t\t\t\t<IonIcon ref={ cartRef } className=\"animate__animated\" icon={ cart } />\r\n\t\t\t\t\t\t</IonButton>\r\n\t\t\t\t\t</IonButtons>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\t\t\t\r\n\t\t\t<IonContent fullscreen>\r\n\r\n                <IonGrid>\r\n                    <IonRow>\r\n                        <IonCol size=\"12\">\r\n                            <IonCard className={ styles.categoryCard }>\r\n                                <IonCardHeader className={ styles.productCardHeader }>\r\n                                    <div className={ styles.productCardActions }>\r\n                                        <IonIcon className={ styles.productCardAction }  color={ isFavourite ? \"danger\" : \"medium\" } icon={ isFavourite ? heart : heartOutline } onClick={ e => addProductToFavourites(e, category.slug, product.id) } />\r\n                                        <IonIcon style={{ position: \"absolute\", display: \"none\" }} id={ `placeholder_favourite_product_${ category.slug }_${ product.id }` } className={ `${ styles.productCardAction } animate__animated` } color=\"danger\" icon={ heart } />\r\n                                        \r\n                                    </div>\r\n                                    <img src={ product.image } alt=\"product pic\" />\r\n                                    <p className=\"ion-text-wrap\">{ product.name }</p>\r\n                                </IonCardHeader>\r\n\r\n                                <IonCardContent className={ styles.categoryCardContent }>\r\n                                    \r\n                                    <div className={ styles.productPrice }>\r\n                                        <IonButton color=\"light\" size=\"large\">\r\n                                            { product.price }\r\n                                        </IonButton>\r\n                                        <IonButton size=\"large\" color=\"success\" onClick={ e => addProductToCart(e, category.slug, product.id) }>\r\n                                            <IonIcon icon={ cartOutline } />&nbsp;&nbsp;Add to Cart\r\n                                        </IonButton>\r\n\r\n                                        <IonIcon icon={ cart } color=\"dark\" style={{ position: \"absolute\", display: \"none\", fontSize: \"3rem\" }} id={ `placeholder_cart_${ category.slug }_${ product.id }` } className=\"animate__animated\" />\r\n                                    </div>\r\n                                </IonCardContent>\r\n                            </IonCard>\r\n                        </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow className=\"ion-text-center\">\r\n                            <IonCol size=\"12\">\r\n                                <IonCardSubtitle>Similar products...</IonCardSubtitle>\r\n                            </IonCol>\r\n                        </IonRow>\r\n\r\n                        <IonRow>\r\n                            { (category && category.products) && category.products.map((similar, index) => {\r\n\r\n                                if ((similar.id !== product.id) && product.image && index < 4) {\r\n\r\n                                    return (\r\n\r\n                                        <ProductCard key={ `similar_product_${ index }`} product={ similar } index={ index } isFavourite={ false } cartRef={ cartRef } category={ category } />\r\n                                    );\r\n                                }\r\n                            })}\r\n                        </IonRow>\r\n                </IonGrid>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n}\r\n\r\nexport default Product;","D:\\mobilecross\\Ajege\\src\\pages\\FavouriteProducts.js",["75","76","77","78","79","80","81","82","83"],"import { IonBadge, IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonNote, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\r\nimport { cart, chevronBackOutline } from \"ionicons/icons\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport { CartStore } from \"../data/CartStore\";\r\nimport { FavouritesStore } from \"../data/FavouritesStore\";\r\nimport { ProductStore } from \"../data/ProductStore\";\r\n\r\nimport styles from \"./CategoryProducts.module.css\";\r\n\r\nconst FavouriteProducts = () => {\r\n\r\n    const cartRef = useRef();\r\n    const products = ProductStore.useState(s => s.products);\r\n    const favourites = FavouritesStore.useState(s => s.product_ids);\r\n    const shopCart = CartStore.useState(s => s.product_ids);\r\n    const [ searchResults, setSearchResults ] = useState([]);\r\n    const [ amountLoaded, setAmountLoaded ] = useState(6);\r\n\r\n    useEffect(() => {\r\n\r\n        const getFavourites = () => {\r\n\r\n            setSearchResults([]);\r\n\r\n            favourites.forEach(favourite => {\r\n\r\n                var favouriteParts = favourite.split(\"/\");\r\n                var categorySlug = favouriteParts[0];\r\n                var productID = favouriteParts[1];\r\n                \r\n                const tempCategory = products.filter(p => p.slug === categorySlug)[0];\r\n                const tempProduct = tempCategory.products.filter(p => parseInt(p.id) === parseInt(productID))[0];\r\n\r\n                const tempFavourite = {\r\n\r\n                    category: tempCategory,\r\n                    product: tempProduct\r\n                };\r\n\r\n                setSearchResults(prevSearchResults => [ ...prevSearchResults, tempFavourite ]);\r\n            });\r\n        }\r\n\r\n        getFavourites();\r\n    }, [ favourites ]);\r\n\r\n    const fetchMore = async (e) => {\r\n\r\n\t\t//\tIncrement the amount loaded by 6 for the next iteration\r\n\t\tsetAmountLoaded(prevAmount => (prevAmount + 6));\r\n\t\te.target.complete();\r\n\t}\r\n\r\n    return (\r\n\r\n        <IonPage id=\"category-page\" className={ styles.categoryPage }>\r\n            <IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonTitle>Favourites</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\t\t\t\r\n\t\t\t<IonContent fullscreen>\r\n                <IonGrid>\r\n\r\n                    <IonRow className=\"ion-text-center\">\r\n                        <IonCol size=\"12\">\r\n                            <IonNote>{ searchResults && searchResults.length } { (searchResults.length > 1 || searchResults.length === 0) ? \" favourites\" : \" favourite\" } found</IonNote>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow>\r\n                        { searchResults && searchResults.map((product, index) => {\r\n\r\n                            if ((index <= amountLoaded)) {\r\n                                return (\r\n                                    <ProductCard key={ `category_product_${ index }`} product={ product.product } index={ index } cartRef={ cartRef } category={ product.category } />\r\n                                );\r\n                            }\r\n                        })}\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonInfiniteScroll threshold=\"100px\" onIonInfinite={ fetchMore }>\r\n\t\t\t\t\t<IonInfiniteScrollContent loadingSpinner=\"bubbles\" loadingText=\"Fetching more...\">\r\n\t\t\t\t\t</IonInfiniteScrollContent>\r\n\t\t\t\t</IonInfiniteScroll>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n}\r\n\r\nexport default FavouriteProducts;","D:\\mobilecross\\Ajege\\src\\data\\CartStore.js",[],"D:\\mobilecross\\Ajege\\src\\data\\fetcher.js",[],"D:\\mobilecross\\Ajege\\src\\data\\FavouritesStore.js",[],"D:\\mobilecross\\Ajege\\src\\pages\\CartProducts.js",["84","85","86","87","88","89","90"],"import { IonAvatar, IonBadge, IonButton, IonButtons, IonCardSubtitle, IonCol, IonContent, IonFooter, IonHeader, IonIcon, IonImg, IonItem, IonItemOption, IonItemOptions, IonItemSliding, IonLabel, IonList, IonNote, IonPage, IonRow, IonTitle, IonToolbar } from \"@ionic/react\";\r\nimport { cart, checkmarkSharp, chevronBackOutline, trashOutline } from \"ionicons/icons\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { CartStore, removeFromCart } from \"../data/CartStore\";\r\nimport { ProductStore } from \"../data/ProductStore\";\r\n\r\nimport styles from \"./CartProducts.module.css\";\r\n\r\nconst CartProducts = () => {\r\n\r\n    const cartRef = useRef();\r\n    const products = ProductStore.useState(s => s.products);\r\n    const shopCart = CartStore.useState(s => s.product_ids);\r\n    const [ cartProducts, setCartProducts ] = useState([]);\r\n    const [ amountLoaded, setAmountLoaded ] = useState(6);\r\n\r\n    const [ total, setTotal ] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        const getCartProducts = () => {\r\n\r\n            setCartProducts([]);\r\n            setTotal(0);\r\n\r\n            shopCart.forEach(product => {\r\n\r\n                var favouriteParts = product.split(\"/\");\r\n                var categorySlug = favouriteParts[0];\r\n                var productID = favouriteParts[1];\r\n                \r\n                const tempCategory = products.filter(p => p.slug === categorySlug)[0];\r\n                const tempProduct = tempCategory.products.filter(p => parseInt(p.id) === parseInt(productID))[0];\r\n\r\n                const tempCartProduct = {\r\n\r\n                    category: tempCategory,\r\n                    product: tempProduct\r\n                };\r\n\r\n                setTotal(prevTotal => prevTotal + parseInt(tempProduct.price.replace(\"£\", \"\")));\r\n                setCartProducts(prevSearchResults => [ ...prevSearchResults, tempCartProduct ]);\r\n            });\r\n        }\r\n\r\n        getCartProducts();\r\n    }, [ shopCart ]);\r\n\r\n    const fetchMore = async (e) => {\r\n\r\n\t\t//\tIncrement the amount loaded by 6 for the next iteration\r\n\t\tsetAmountLoaded(prevAmount => (prevAmount + 6));\r\n\t\te.target.complete();\r\n\t}\r\n\r\n    const removeProductFromCart = async (index) => {\r\n\r\n        removeFromCart(index);\r\n    }\r\n\r\n    return (\r\n\r\n        <IonPage id=\"category-page\" className={ styles.categoryPage }>\r\n            <IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n\t\t\t\t\t<IonTitle>Cart</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\t\t\t\r\n\t\t\t<IonContent fullscreen>\r\n                    <IonRow className=\"ion-text-center ion-margin-top\">\r\n                        <IonCol size=\"12\">\r\n                            <IonNote>{ cartProducts && cartProducts.length } { (cartProducts.length > 1 || cartProducts.length === 0) ? \" products\" : \" product\" } found</IonNote>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonList>\r\n                        { cartProducts && cartProducts.map((product, index) => {\r\n\r\n                            if ((index <= amountLoaded)) {\r\n                                return (\r\n                                <IonItemSliding className={ styles.cartSlider }>\r\n                                    <IonItem key={ index } lines=\"none\" detail={ false } className={ styles.cartItem }>\r\n\r\n                                        <IonAvatar>\r\n                                            <IonImg src={ product.product.image } />\r\n                                        </IonAvatar>\r\n                                        <IonLabel className=\"ion-padding-start ion-text-wrap\">\r\n                                            <p>{ product.category.name }</p>\r\n                                            <h4>{ product.product.name }</h4>\r\n                                        </IonLabel>\r\n\r\n                                        <div className={ styles.cartActions }>\r\n                                            <IonBadge color=\"dark\">{ product.product.price }</IonBadge>\r\n                                        </div>\r\n                                    </IonItem>\r\n\r\n                                    <IonItemOptions side=\"end\">\r\n                                        <IonItemOption color=\"danger\" style={{ paddingLeft: \"1rem\", paddingRight: \"1rem\" }} onClick={ () => removeProductFromCart(index) }>\r\n                                            <IonIcon icon={ trashOutline } />\r\n                                        </IonItemOption>\r\n                                    </IonItemOptions>\r\n                                </IonItemSliding>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </IonList>\r\n            </IonContent>\r\n            <IonFooter className={ styles.cartFooter }>\r\n                <div className={ styles.cartCheckout }>\r\n                    <IonCardSubtitle>Rp.{ total.toFixed(0) }</IonCardSubtitle>\r\n                    <IonButton color=\"primary\">\r\n                        <IonIcon icon={ checkmarkSharp } />&nbsp;Accept Payment\r\n                    </IonButton>\r\n                </div>\r\n            </IonFooter>\r\n        </IonPage>\r\n    );\r\n}\r\nexport default CartProducts;","D:\\mobilecross\\Ajege\\src\\pages\\CategoryProducts.js",["91","92","93","94","95"],"import { IonBadge, IonButton, IonButtons, IonCol, IonContent, IonGrid, IonHeader, IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonNote, IonPage, IonRow, IonSearchbar, IonTitle, IonToolbar } from \"@ionic/react\";\r\nimport { cart, chevronBackOutline, searchOutline } from \"ionicons/icons\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router\"\r\nimport ProductCard from \"../components/ProductCard\";\r\n\r\nimport { CartStore } from \"../data/CartStore\";\r\nimport { ProductStore } from \"../data/ProductStore\";\r\n\r\nimport styles from \"./CategoryProducts.module.css\";\r\n\r\nconst CategoryProducts = () => {\r\n\r\n    const params = useParams();\r\n    const cartRef = useRef();\r\n    const products = ProductStore.useState(s => s.products);\r\n    const shopCart = CartStore.useState(s => s.product_ids);\r\n    const [ category, setCategory ] = useState({});\r\n    const [ searchResults, setsearchResults ] = useState([]);\r\n    const [ amountLoaded, setAmountLoaded ] = useState(6);\r\n\r\n    useEffect(() => {\r\n\r\n        const categorySlug = params.slug;\r\n        const tempCategory = products.filter(p => p.slug === categorySlug)[0];\r\n        setCategory(tempCategory);\r\n        setsearchResults(tempCategory.products);\r\n    }, [ params.slug ]);\r\n\r\n    const fetchMore = async (e) => {\r\n\r\n\t\t//\tIncrement the amount loaded by 6 for the next iteration\r\n\t\tsetAmountLoaded(prevAmount => (prevAmount + 6));\r\n\t\te.target.complete();\r\n\t}\r\n\r\n    const search = async e => {\r\n\r\n        const searchVal = e.target.value;\r\n\r\n        if (searchVal !== \"\") {\r\n         \r\n            const tempResults = category.products.filter(p => p.name.toLowerCase().includes(searchVal.toLowerCase()));\r\n            setsearchResults(tempResults);\r\n        } else {\r\n\r\n            setsearchResults(category.products);\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <IonPage id=\"category-page\" className={ styles.categoryPage }>\r\n            <IonHeader>\r\n\t\t\t\t<IonToolbar>\r\n                    <IonButtons slot=\"start\">\r\n                        <IonButton color=\"dark\" text={ category.name } routerLink=\"/\" routerDirection=\"back\">\r\n                            <IonIcon color=\"dark\" icon={ chevronBackOutline } />&nbsp;Categories\r\n                        </IonButton>\r\n                    </IonButtons>\r\n\t\t\t\t\t<IonTitle>{ category && category.name }</IonTitle>\r\n\t\t\t\t</IonToolbar>\r\n\t\t\t</IonHeader>\r\n\t\t\t\r\n\t\t\t<IonContent fullscreen>\r\n\r\n                <IonSearchbar className={ styles.search } onKeyUp={ search } placeholder=\"Search Here\" searchIcon={ searchOutline } animated={ true } />\r\n\r\n                <IonGrid>\r\n\r\n                    <IonRow className=\"ion-text-center\">\r\n                        <IonCol size=\"12\">\r\n                            <IonNote>{ searchResults && searchResults.length } { (searchResults.length > 1 || searchResults.length === 0) ? \" products\" : \" product\" } found</IonNote>\r\n                        </IonCol>\r\n                    </IonRow>\r\n\r\n                    <IonRow>\r\n                        { searchResults && searchResults.map((product, index) => {\r\n\r\n                            if ((index <= amountLoaded) && product.image) {\r\n                                return (\r\n                                    <ProductCard key={ `category_product_${ index }`} product={ product } index={ index } cartRef={ cartRef } category={ category } />\r\n                                );\r\n                            }\r\n                        })}\r\n                    </IonRow>\r\n                </IonGrid>\r\n\r\n                <IonInfiniteScroll threshold=\"100px\" onIonInfinite={ fetchMore }>\r\n\t\t\t\t\t<IonInfiniteScrollContent loadingSpinner=\"bubbles\" loadingText=\"Fetching more...\">\r\n\t\t\t\t\t</IonInfiniteScrollContent>\r\n\t\t\t\t</IonInfiniteScroll>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n}\r\n\r\nexport default CategoryProducts;","D:\\mobilecross\\Ajege\\src\\components\\ProductCard.js",["96","97"],"import { IonButton, IonCard, IonCardContent, IonCardHeader, IonCol, IonIcon } from \"@ionic/react\";\r\nimport { arrowRedoOutline, cart, cartOutline, heart, heartOutline } from \"ionicons/icons\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { addToCart } from \"../data/CartStore\";\r\nimport { addToFavourites, FavouritesStore } from \"../data/FavouritesStore\";\r\nimport styles from \"./ProductCard.module.css\";\r\n\r\nconst ProductCard = props => {\r\n\r\n    const { product, category, index, cartRef } = props;\r\n    const favourites = FavouritesStore.useState(s => s.product_ids);\r\n\r\n    const productCartRef = useRef();\r\n    const productFavouriteRef = useRef();\r\n    const [ isFavourite, setIsFavourite ] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const tempIsFavourite = favourites.find(f => f === `${ category.slug }/${ product.id }`);\r\n        setIsFavourite(tempIsFavourite ? true : false);\r\n    }, [props.product, favourites]);\r\n\r\n    const addProductToFavourites = (e, categorySlug, productID) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        addToFavourites(categorySlug, productID);\r\n\r\n\r\n        productFavouriteRef.current.style.display = \"\";\r\n        productFavouriteRef.current.classList.add(\"animate__fadeOutTopRight\");\r\n\r\n        setTimeout(() => {\r\n            if (productCartRef.current) {\r\n                productFavouriteRef.current.classList.remove(\"animate__fadeOutTopRight\");\r\n                productFavouriteRef.current.style.display = \"none\";\r\n            }\r\n        }, 500);\r\n    }\r\n\r\n    const addProductToCart = (e, categorySlug, productID) => {\r\n\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        productCartRef.current.style.display = \"\";\r\n        productCartRef.current.classList.add(\"animate__fadeOutUp\");\r\n\r\n        setTimeout(() => {\r\n\r\n            cartRef.current.classList.add(\"animate__tada\");\r\n            addToCart(categorySlug, productID);\r\n\r\n            setTimeout(() => {\r\n                \r\n                cartRef.current.classList.remove(\"animate__tada\");\r\n                productCartRef.current.style.display = \"none\";\r\n            }, 500);\r\n        }, 500);\r\n    }\r\n\r\n    return (\r\n\r\n        <IonCol size=\"6\" key={ `category_product_list_${ index }`}>\r\n            <IonCard routerLink={ `/category/${ category.slug }/${ product.id }`} className={ styles.categoryCard }>\r\n                <IonCardHeader className={ styles.productCardHeader }>\r\n                    <div className={ styles.productCardActions }>\r\n                        <IonIcon className={ styles.productCardAction }  color={ isFavourite ? \"danger\" : \"medium\" } icon={ isFavourite ? heart : heartOutline } onClick={ e => addProductToFavourites(e, category.slug, product.id) } />\r\n                        <IonIcon ref={ productFavouriteRef } style={{ position: \"absolute\", display: \"none\" }} className={ `${ styles.productCardAction } animate__animated` } color=\"danger\" icon={ heart } />\r\n                      \r\n                    </div>\r\n                    <img src={ product.image } alt=\"product pic\" />\r\n                    <p className=\"ion-text-wrap\">{ product.name }</p>\r\n                </IonCardHeader>\r\n\r\n                <IonCardContent className={ styles.categoryCardContent }>\r\n                    \r\n                    <div className={ styles.productPrice }>\r\n                        <IonButton style={{ width: \"100%\" }} color=\"light\">\r\n                            { product.price }\r\n                        </IonButton>\r\n                        <IonButton color=\"success\" onClick={ e => addProductToCart(e, category.slug, product.id) }>\r\n                            <IonIcon icon={ cartOutline } />\r\n                        </IonButton>\r\n\r\n                        <IonIcon ref={ productCartRef } icon={ cart } color=\"dark\" style={{ position: \"absolute\", display: \"none\", fontSize: \"3rem\" }} className=\"animate__animated\" />\r\n                    </div>\r\n                </IonCardContent>\r\n            </IonCard>\r\n        </IonCol>\r\n    );\r\n}\r\n\r\nexport default ProductCard;",{"ruleId":"98","severity":1,"message":"99","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":18},{"ruleId":"98","severity":1,"message":"102","line":4,"column":20,"nodeType":"100","messageId":"101","endLine":4,"endColumn":32},{"ruleId":"98","severity":1,"message":"103","line":4,"column":34,"nodeType":"100","messageId":"101","endLine":4,"endColumn":37},{"ruleId":"98","severity":1,"message":"104","line":4,"column":39,"nodeType":"100","messageId":"101","endLine":4,"endColumn":56},{"ruleId":"98","severity":1,"message":"105","line":35,"column":8,"nodeType":"100","messageId":"101","endLine":35,"endColumn":16},{"ruleId":"98","severity":1,"message":"106","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":18},{"ruleId":"98","severity":1,"message":"107","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":18},{"ruleId":"98","severity":1,"message":"108","line":2,"column":20,"nodeType":"100","messageId":"101","endLine":2,"endColumn":29},{"ruleId":"98","severity":1,"message":"109","line":2,"column":31,"nodeType":"100","messageId":"101","endLine":2,"endColumn":41},{"ruleId":"98","severity":1,"message":"110","line":2,"column":125,"nodeType":"100","messageId":"101","endLine":2,"endColumn":132},{"ruleId":"98","severity":1,"message":"111","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":14},{"ruleId":"98","severity":1,"message":"112","line":5,"column":16,"nodeType":"100","messageId":"101","endLine":5,"endColumn":21},{"ruleId":"98","severity":1,"message":"113","line":14,"column":10,"nodeType":"100","messageId":"101","endLine":14,"endColumn":20},{"ruleId":"98","severity":1,"message":"114","line":15,"column":8,"nodeType":"100","messageId":"101","endLine":15,"endColumn":16},{"ruleId":"98","severity":1,"message":"115","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":26},{"ruleId":"116","severity":1,"message":"117","line":35,"column":8,"nodeType":"118","endLine":35,"endColumn":34,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":41,"column":8,"nodeType":"118","endLine":41,"endColumn":29,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":135,"column":105,"nodeType":"124","messageId":"125","endLine":135,"endColumn":107},{"ruleId":"98","severity":1,"message":"107","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":18},{"ruleId":"98","severity":1,"message":"108","line":1,"column":20,"nodeType":"100","messageId":"101","endLine":1,"endColumn":29},{"ruleId":"98","severity":1,"message":"109","line":1,"column":31,"nodeType":"100","messageId":"101","endLine":1,"endColumn":41},{"ruleId":"98","severity":1,"message":"110","line":1,"column":83,"nodeType":"100","messageId":"101","endLine":1,"endColumn":90},{"ruleId":"98","severity":1,"message":"111","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"126","line":2,"column":16,"nodeType":"100","messageId":"101","endLine":2,"endColumn":34},{"ruleId":"98","severity":1,"message":"114","line":16,"column":11,"nodeType":"100","messageId":"101","endLine":16,"endColumn":19},{"ruleId":"116","severity":1,"message":"127","line":46,"column":8,"nodeType":"118","endLine":46,"endColumn":22,"suggestions":"128"},{"ruleId":"122","severity":1,"message":"123","line":74,"column":79,"nodeType":"124","messageId":"125","endLine":74,"endColumn":81},{"ruleId":"98","severity":1,"message":"109","line":1,"column":42,"nodeType":"100","messageId":"101","endLine":1,"endColumn":52},{"ruleId":"98","severity":1,"message":"111","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"126","line":2,"column":32,"nodeType":"100","messageId":"101","endLine":2,"endColumn":50},{"ruleId":"98","severity":1,"message":"129","line":11,"column":11,"nodeType":"100","messageId":"101","endLine":11,"endColumn":18},{"ruleId":"116","severity":1,"message":"127","line":47,"column":8,"nodeType":"118","endLine":47,"endColumn":20,"suggestions":"130"},{"ruleId":"98","severity":1,"message":"131","line":49,"column":11,"nodeType":"100","messageId":"101","endLine":49,"endColumn":20},{"ruleId":"122","severity":1,"message":"123","line":78,"column":77,"nodeType":"124","messageId":"125","endLine":78,"endColumn":79},{"ruleId":"98","severity":1,"message":"107","line":1,"column":10,"nodeType":"100","messageId":"101","endLine":1,"endColumn":18},{"ruleId":"98","severity":1,"message":"111","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"114","line":17,"column":11,"nodeType":"100","messageId":"101","endLine":17,"endColumn":19},{"ruleId":"116","severity":1,"message":"127","line":28,"column":8,"nodeType":"118","endLine":28,"endColumn":23,"suggestions":"132"},{"ruleId":"122","severity":1,"message":"123","line":78,"column":79,"nodeType":"124","messageId":"125","endLine":78,"endColumn":81},{"ruleId":"98","severity":1,"message":"115","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":26},{"ruleId":"116","severity":1,"message":"133","line":21,"column":8,"nodeType":"118","endLine":21,"endColumn":35,"suggestions":"134"},"no-unused-vars","'calendar' is defined but never used.","Identifier","unusedVar","'personCircle' is defined but never used.","'map' is defined but never used.","'informationCircle' is defined but never used.","'products' is assigned a value but never used.","'useState' is defined but never used.","'IonBadge' is defined but never used.","'IonButton' is defined but never used.","'IonButtons' is defined but never used.","'IonIcon' is defined but never used.","'cart' is defined but never used.","'heart' is defined but never used.","'favourites' is assigned a value but never used.","'shopCart' is assigned a value but never used.","'arrowRedoOutline' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'favourites' and 'products'. Either include them or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'category.slug'. Either include it or remove the dependency array.",["136"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'chevronBackOutline' is defined but never used.","React Hook useEffect has a missing dependency: 'products'. Either include it or remove the dependency array.",["137"],"'cartRef' is assigned a value but never used.",["138"],"'fetchMore' is assigned a value but never used.",["139"],"React Hook useEffect has missing dependencies: 'category.slug' and 'product.id'. Either include them or remove the dependency array.",["140"],{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [params.slug, params.id, products, favourites]",{"range":"153","text":"154"},"Update the dependencies array to be: [category.slug, favourites, product]",{"range":"155","text":"156"},"Update the dependencies array to be: [favourites, products]",{"range":"157","text":"158"},"Update the dependencies array to be: [products, shopCart]",{"range":"159","text":"160"},"Update the dependencies array to be: [params.slug, products]",{"range":"161","text":"162"},"Update the dependencies array to be: [props.product, favourites, category.slug, product.id]",{"range":"163","text":"164"},[1676,1702],"[params.slug, params.id, products, favourites]",[1896,1917],"[category.slug, favourites, product]",[1835,1849],"[favourites, products]",[1926,1938],"[products, shopCart]",[1250,1265],"[params.slug, products]",[918,945],"[props.product, favourites, category.slug, product.id]"]